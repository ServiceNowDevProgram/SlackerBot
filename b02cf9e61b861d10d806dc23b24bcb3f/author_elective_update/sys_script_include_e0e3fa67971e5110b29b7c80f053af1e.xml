<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="DELETE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_slackerbot.Privacy</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Privacy API</description>
        <name>Privacy</name>
        <script><![CDATA[var Privacy = Class.create();
Privacy.prototype = {
    initialize: function(grChat) {
        this._init(grChat);
    },
    parse: function() {
        return this._parse();
    },

    _init: function(grChat) {
        this.grChat = grChat;
        var regex = /^(!1984|!privacy)/;
        this.objChat = {
            'channel': grChat.getValue('channel') || '',
            'text': grChat.getValue('text').replace(regex, '').trim() || '',
            'thread_ts': grChat.getValue('thread_ts') || '',
            'ts': grChat.getValue('ts') || '',
            'user': grChat.getValue('user') || '',
        };
        this.grUser = grChat.user.getRefRecord();
    },

    _getCount: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('COUNT');
        gaChat.query();
        gaChat.next();
        var numCount = gaChat.getAggregate('COUNT') || 0;
        return numCount;
    },
    _getCountWords: function() {
		var strResult = '';
        var grChat = new GlideRecord('x_snc_slackerbot_chat');
        grChat.addQuery('user', this.grUser.getUniqueValue());
        grChat.query();
        while(grChat.next()) {
			strResult = strResult.concat(' ', grChat.getValue('text'));
		}
		var arrWords = strResult.split(' ');
		var objWords = {};
		for (var iWord = 0; iWord < arrWords.length; iWord++ ) {
			var strWord = arrWords[iWord];
			objWords[strWord] = objWords[strWord] || 0;
			objWords[strWord]++;
		}
		arrWords = Object.keys(objWords);
		var strResult1 = '', strResult2 = '', strResult3 = '';
		var numScore1 = 0, numScore2 = 0, numScore3 = 0;
		var numScore = 0;
		for (iWord = 0; iWord < arrWords.length; iWord++ ) {
			strWord = arrWords[iWord] || '';
			numScore = objWords[strWord] || 0;
			if (numScore > numScore3 && numScore < numScore2) {
				numScore3 = numScore;
				strResult3 = strWord;
			}
			if (numScore > numScore2 && numScore < numScore1) {
				numScore2 = numScore;
				strResult2 = strWord;
			}
			if (numScore > numScore1) {
				numScore1 = numScore;
				strResult1 = strWord;
			}			
		}
		strResult = ':first_place_medal: ' + strResult1 + ' (' + numScore1 + '), :second_place_medal: ' + strResult2 + ' (' + numScore2 + '), :third_place_medal: ' + strResult3 + ' (' + numScore3 + ')';
		return strResult;
    },
    _getDateMin: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('MIN', 'sys_created_on');
        gaChat.query();
        gaChat.next();
        var strDate = gaChat.getAggregate('MIN', 'sys_created_on') || '<N/A>';
        return strDate;
    },

    _getLog: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot Privacy Report incoming...', true);
        var numCount = this._getCount();
        Slacker.send_chat(this.grChat, 'Total chat files: ' + numCount, true);
        var strDateMin = this._getDateMin();
        Slacker.send_chat(this.grChat, ':rotating_light: First flagged up on the radar: ' + strDateMin, true);
        var strCountWords = this._getCountWords();
        Slacker.send_chat(this.grChat, 'Top 3 Words in your vocab: ' + strCountWords, true);	
		
		// Sign Out
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot - Remember I am always watching...', true);
    },
    _getNotice: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		var strPrivacyNotice = gs.getProperty('x_snc_slackerbot.privacy.notice', 'TBC');
		Slacker.send_chat(this.grChat, strPrivacyNotice, true);
    },	
	// 

    _parse: function() {
        try {
			return this._getNotice();
        } catch (e) {
            gs.error("An error occured when SlackerBot tried to send a response back to Slack.\nError: " + e.name + ": " + e.message);
        }
    },


    type: 'Privacy'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>w.geek6</sys_created_by>
        <sys_created_on>2022-10-08 22:23:00</sys_created_on>
        <sys_id>e0e3fa67971e5110b29b7c80f053af1e</sys_id>
        <sys_name>Privacy</sys_name>
        <sys_package display_value="SlackerBot" source="x_snc_slackerbot">b02cf9e61b861d10d806dc23b24bcb3f</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SlackerBot">b02cf9e61b861d10d806dc23b24bcb3f</sys_scope>
        <sys_update_name>sys_script_include_e0e3fa67971e5110b29b7c80f053af1e</sys_update_name>
    </sys_script_include>
<sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="SlackerBot">b02cf9e61b861d10d806dc23b24bcb3f</application>
        <file_path/>
        <instance_id>671830c5dbbdbc1049eac597059619c5</instance_id>
        <instance_name>earl</instance_name>
        <name>sys_script_include_e0e3fa67971e5110b29b7c80f053af1e</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;
    &lt;sys_script_include action="INSERT_OR_UPDATE"&gt;
        &lt;access&gt;package_private&lt;/access&gt;
        &lt;active&gt;true&lt;/active&gt;
        &lt;api_name&gt;x_snc_slackerbot.Privacy&lt;/api_name&gt;
        &lt;caller_access/&gt;
        &lt;client_callable&gt;false&lt;/client_callable&gt;
        &lt;description&gt;Privacy API&lt;/description&gt;
        &lt;name&gt;Privacy&lt;/name&gt;
        &lt;script&gt;&lt;![CDATA[var Privacy = Class.create();
Privacy.prototype = {
    initialize: function(grChat) {
        this._init(grChat);
    },
    parse: function() {
        return this._parse();
    },

    _init: function(grChat) {
        this.grChat = grChat;
        var regex = /^(!1984|!privacy)/;
        this.objChat = {
            'channel': grChat.getValue('channel') || '',
            'text': grChat.getValue('text').replace(regex, '').trim() || '',
            'thread_ts': grChat.getValue('thread_ts') || '',
            'ts': grChat.getValue('ts') || '',
            'user': grChat.getValue('user') || '',
        };
        this.grUser = grChat.user.getRefRecord();
    },

    _getCount: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('COUNT');
        gaChat.query();
        gaChat.next();
        var numCount = gaChat.getAggregate('COUNT') || 0;
        return numCount;
    },
    _getCountWords: function() {
		var strResult = '';
        var grChat = new GlideRecord('x_snc_slackerbot_chat');
        grChat.addQuery('user', this.grUser.getUniqueValue());
        grChat.query();
        while(grChat.next()) {
			strResult = strResult.concat(' ', grChat.getValue('text'));
		}
		var arrWords = strResult.split(' ');
		var objWords = {};
		for (var iWord = 0; iWord &lt; arrWords.length; iWord++ ) {
			var strWord = arrWords[iWord];
			objWords[strWord] = objWords[strWord] || 0;
			objWords[strWord]++;
		}
		arrWords = Object.keys(objWords);
		var strResult1 = '', strResult2 = '', strResult3 = '';
		var numScore1 = 0, numScore2 = 0, numScore3 = 0;
		var numScore = 0;
		for (iWord = 0; iWord &lt; arrWords.length; iWord++ ) {
			strWord = arrWords[iWord] || '';
			numScore = objWords[strWord] || 0;
			if (numScore &gt; numScore3 &amp;&amp; numScore &lt; numScore2) {
				numScore3 = numScore;
				strResult3 = strWord;
			}
			if (numScore &gt; numScore2 &amp;&amp; numScore &lt; numScore1) {
				numScore2 = numScore;
				strResult2 = strWord;
			}
			if (numScore &gt; numScore1) {
				numScore1 = numScore;
				strResult1 = strWord;
			}			
		}
		strResult = ':first_place_medal: ' + strResult1 + ' (' + numScore1 + '), :second_place_medal: ' + strResult2 + ' (' + numScore2 + '), :third_place_medal: ' + strResult3 + ' (' + numScore3 + ')';
		return strResult;
    },
    _getDateMin: function() {
        var gaChat = new GlideAggregate('x_snc_slackerbot_chat');
        gaChat.addQuery('user', this.grUser.getUniqueValue());
        gaChat.addAggregate('MIN', 'sys_created_on');
        gaChat.query();
        gaChat.next();
        var strDate = gaChat.getAggregate('MIN', 'sys_created_on') || '&lt;N/A&gt;';
        return strDate;
    },

    _getLog: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot Privacy Report incoming...', true);
        var numCount = this._getCount();
        Slacker.send_chat(this.grChat, 'Total chat files: ' + numCount, true);
        var strDateMin = this._getDateMin();
        Slacker.send_chat(this.grChat, ':rotating_light: First flagged up on the radar: ' + strDateMin, true);
        var strCountWords = this._getCountWords();
        Slacker.send_chat(this.grChat, 'Top 3 Words in your vocab: ' + strCountWords, true);	
		
		// Sign Out
		Slacker.send_chat(this.grChat, ':eye: 1984 : SlackerBot - Remember I am always watching...', true);
    },
    _getNotice: function() {
        var Slacker = new x_snc_slackerbot.Slacker();
		var strPrivacyNotice = gs.getProperty('x_snc_slackerbot.privacy.notice', 'TBC');
		Slacker.send_chat(this.grChat, strPrivacyNotice, true);
    },	
	// 

    _parse: function() {
        try {
			return this._getNotice();
        } catch (e) {
            gs.error("An error occured when SlackerBot tried to send a response back to Slack.\nError: " + e.name + ": " + e.message);
        }
    },


    type: 'Privacy'
};]]&gt;&lt;/script&gt;
        &lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;w.geek6&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2022-10-08 22:23:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;e0e3fa67971e5110b29b7c80f053af1e&lt;/sys_id&gt;
        &lt;sys_name&gt;Privacy&lt;/sys_name&gt;
        &lt;sys_package display_value="SlackerBot" source="x_snc_slackerbot"&gt;b02cf9e61b861d10d806dc23b24bcb3f&lt;/sys_package&gt;
        &lt;sys_policy&gt;read&lt;/sys_policy&gt;
        &lt;sys_scope display_value="SlackerBot"&gt;b02cf9e61b861d10d806dc23b24bcb3f&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sys_script_include_e0e3fa67971e5110b29b7c80f053af1e&lt;/sys_update_name&gt;
    &lt;/sys_script_include&gt;
&lt;/record_update&gt;</payload>
        <payload_hash>-1820168648</payload_hash>
        <record_name>Privacy</record_name>
        <reverted_from/>
        <source>1592a9ac1bf61110cba18485604bcbf9</source>
        <source_table>sys_upgrade_history</source_table>
        <state>current</state>
        <sys_created_by>earl.duque</sys_created_by>
        <sys_created_on>2022-10-24 05:14:50</sys_created_on>
        <sys_id>11a2edac1bf61110cba18485604bcb0b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>184086a3b080000001</sys_recorded_at>
        <sys_updated_by>earl.duque</sys_updated_by>
        <sys_updated_on>2022-10-24 05:14:50</sys_updated_on>
        <type>Script Include</type>
        <update_guid>5da2edac77f6111094fdb9774b14a30a</update_guid>
        <update_guid_history>5da2edac77f6111094fdb9774b14a30a:0,6b49542da0e259509af5b74774b14c5f:-1483298996,63988e34056e9550edd45570afe2bd36:0,148c51d86e2e1550f7dc8bb1df5f7eb2:1503900774</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>earl.duque</sys_created_by>
        <sys_created_on>2022-10-24 05:30:34</sys_created_on>
        <sys_db_object display_value="" name="sys_script_include">sys_script_include</sys_db_object>
        <sys_id>7012be551b984ed4ac44d13efc8e25a4</sys_id>
        <sys_metadata>e0e3fa67971e5110b29b7c80f053af1e</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Privacy</sys_name>
        <sys_package display_value="SlackerBot" source="x_snc_slackerbot">b02cf9e61b861d10d806dc23b24bcb3f</sys_package>
        <sys_parent/>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="SlackerBot">b02cf9e61b861d10d806dc23b24bcb3f</sys_scope>
        <sys_scope_delete display_value="">037003e1313b46e4831058384767d651</sys_scope_delete>
        <sys_update_name>sys_script_include_e0e3fa67971e5110b29b7c80f053af1e</sys_update_name>
        <sys_update_version display_value="sys_script_include_e0e3fa67971e5110b29b7c80f053af1e">11a2edac1bf61110cba18485604bcb0b</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-01-24 15:37:34</sys_updated_on>
    </sys_metadata_delete>
</record_update>
