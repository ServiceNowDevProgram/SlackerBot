<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_slackerbot_payload</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_slackerbot_payload">payload_type=event^EQ<item display_value="Event" endquery="false" field="payload_type" goto="false" newquery="false" operator="=" or="false" value="event"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Parse reacts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var payload = JSON.parse(current.payload);
	if (payload.event.type != 'reaction_added') return;
	
	current.channel = payload.event.item.channel;
	current.ts = payload.event.item.ts;

	var parser = new GlideRecord('x_snc_slackerbot_parser');
	parser.addQuery('active', 'true');
	parser.addEncodedQuery('emoji!=NULL');
	parser.query();
	while (parser.next()){
		var emojis = parser.getValue('emoji').split(',');
		if (emojis.indexOf(payload.event.reaction) > -1){
			new GlideScopedEvaluator().evaluateScript(parser, 'script', {'current': current});
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>earl.duque</sys_created_by>
        <sys_created_on>2022-10-01 06:35:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e6781b85db565510791d8f8d13961907</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Parse reacts</sys_name>
        <sys_overrides/>
        <sys_package display_value="SlackerBot" source="x_snc_slackerbot">b02cf9e61b861d10d806dc23b24bcb3f</sys_package>
        <sys_policy/>
        <sys_scope display_value="SlackerBot">b02cf9e61b861d10d806dc23b24bcb3f</sys_scope>
        <sys_update_name>sys_script_e6781b85db565510791d8f8d13961907</sys_update_name>
        <sys_updated_by>asteroid</sys_updated_by>
        <sys_updated_on>2024-10-20 09:07:59</sys_updated_on>
        <template/>
        <when>async_always</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e6781b85db565510791d8f8d13961907"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>e6781b85db565510791d8f8d13961907</id>
        <sys_created_by>asteroid</sys_created_by>
        <sys_created_on>2024-10-20 09:07:59</sys_created_on>
        <sys_id>a0d35aeec3d9125055bdd523e4013174</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>asteroid</sys_updated_by>
        <sys_updated_on>2024-10-20 09:07:59</sys_updated_on>
        <table>sys_script</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
